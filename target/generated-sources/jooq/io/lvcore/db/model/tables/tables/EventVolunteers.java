/*
 * This file is generated by jOOQ.
 */
package io.lvcore.db.model.tables.tables;


import io.lvcore.db.model.tables.Indexes;
import io.lvcore.db.model.tables.Keys;
import io.lvcore.db.model.tables.Lvcore;
import io.lvcore.db.model.tables.tables.records.EventVolunteersRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventVolunteers extends TableImpl<EventVolunteersRecord> {

    private static final long serialVersionUID = -1409712246;

    /**
     * The reference instance of <code>lvcore.EVENT_VOLUNTEERS</code>
     */
    public static final EventVolunteers EVENT_VOLUNTEERS = new EventVolunteers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EventVolunteersRecord> getRecordType() {
        return EventVolunteersRecord.class;
    }

    /**
     * The column <code>lvcore.EVENT_VOLUNTEERS.event_id</code>.
     */
    public final TableField<EventVolunteersRecord, String> EVENT_ID = createField("event_id", org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false), this, "");

    /**
     * The column <code>lvcore.EVENT_VOLUNTEERS.user_id</code>.
     */
    public final TableField<EventVolunteersRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false), this, "");

    /**
     * Create a <code>lvcore.EVENT_VOLUNTEERS</code> table reference
     */
    public EventVolunteers() {
        this(DSL.name("EVENT_VOLUNTEERS"), null);
    }

    /**
     * Create an aliased <code>lvcore.EVENT_VOLUNTEERS</code> table reference
     */
    public EventVolunteers(String alias) {
        this(DSL.name(alias), EVENT_VOLUNTEERS);
    }

    /**
     * Create an aliased <code>lvcore.EVENT_VOLUNTEERS</code> table reference
     */
    public EventVolunteers(Name alias) {
        this(alias, EVENT_VOLUNTEERS);
    }

    private EventVolunteers(Name alias, Table<EventVolunteersRecord> aliased) {
        this(alias, aliased, null);
    }

    private EventVolunteers(Name alias, Table<EventVolunteersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> EventVolunteers(Table<O> child, ForeignKey<O, EventVolunteersRecord> key) {
        super(child, key, EVENT_VOLUNTEERS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lvcore.LVCORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EVENT_VOLUNTEERS_EVENT_VOL_ID_FK, Indexes.EVENT_VOLUNTEERS_USER_VOL_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EventVolunteersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EventVolunteersRecord, ?>>asList(Keys.EVENT_VOL_ID_FK, Keys.USER_VOL_ID_FK);
    }

    public Event event() {
        return new Event(this, Keys.EVENT_VOL_ID_FK);
    }

    public User user() {
        return new User(this, Keys.USER_VOL_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventVolunteers as(String alias) {
        return new EventVolunteers(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventVolunteers as(Name alias) {
        return new EventVolunteers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EventVolunteers rename(String name) {
        return new EventVolunteers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EventVolunteers rename(Name name) {
        return new EventVolunteers(name, null);
    }
}
